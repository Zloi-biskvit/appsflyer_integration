version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d:ro  # для инициализационных SQL
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=${PROM_RETENTION:-15d}"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports: ["9090:9090"]
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports: ["9093:9093"]
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.5
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}
    ports: ["3000:3000"]
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

  node_exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node_exporter
    pid: host
    network_mode: host
    command: ["--path.rootfs=/host"]
    volumes:
      - "/:/host:ro,rslave"
    restart: unless-stopped

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: postgres_exporter
    depends_on: [postgres]
    environment:
      - DATA_SOURCE_NAME=postgresql://${PG_EXPORTER_USER}:${PG_EXPORTER_PASSWORD}@postgres:5432/${PG_DB}?sslmode=disable
      - POSTGRES_EXPORTER_AUTO_DISCOVER_DATABASES=true
    ports: ["9187:9187"]
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  pg_data: